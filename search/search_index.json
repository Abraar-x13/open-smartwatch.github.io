{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Overview The Open-SmartWatch is an open source project created by @pauls_3d_things / p3dt.net . It consists of hardware modules, 3D printable cases and a custom operating system to build smartwatches with the goal that they can be assembled, repaired, and modified by everyone. Make sure to check out the apps to see what the watch can do! Watchfaces Tools Games Specifications There are currently two versions, a GPS edition (pre-released, work in progress) and a Light edition (released), which share the following hardware: ESP32-pico-D4: 2x240MHz, 320KB RAM Bluetooth 4.2 BR/EDR BLE WiFi 2.4GHz 802.11 b/g/n GC9A01 240x240 16bit TFT display (round) BMA400 Accelerometer + Pedometer MCP73831 LiPo Charger CH340E USB Serial The GPS edition has additionally: Quectel L96 GPS module 4MB RAM microSD The PCB (KiCAD), Case design files (Blender), and Operating System (C++/Arduino/PlatformIO) are all created with open source software, and are hosted on GitHub (see links below). Media Coverage @pauls_3d_things on Instagram (Latest Updates!) #opensmartwatch on Instagram (See what the community creates!) pauls_3d_things on Youtube (Tutorials + Instructions!) Linus Tech Tips: It's time. Hackaday: An Open Source Smart Watch you'd actually wear CNX-Software: LilyGo sells Open-Smartwatch open-source hardware ESP32 watch by \u201cPaul\u2019s 3D Things\u201d hackster.io: Something ESPecially Impressive about the Open-Smartwatch Project Join the Discussion Discord: Pauls 3D Things Getting Started Please watch this to get familiar with the first steps: https://www.youtube.com/watch?v=p-mDOIUr-rQ&ab_channel=pauls_3d_things The video explains how to put the watch into flash mode. Read the readme for a guide to flash the firmware from source: https://github.com/Open-Smartwatch/open-smartwatch-os/blob/master/Readme.md Repositories https://github.com/Open-Smartwatch/open-smartwatch-gps (work in progress) https://github.com/Open-Smartwatch/open-smartwatch-light (v3.3) https://github.com/Open-Smartwatch/open-smartwatch-os https://github.com/Open-Smartwatch/3d-files Ordering This is project is entirely open source. You can either build it from scratch, or chose from one of the manufacturers below. Everything is till in the very beginning of this project, and fully assembled watches will be available soon! Follow this project on instagram.com/pauls_3d_things/ to stay up do date and get notified once new options are available! PCBs Light Edition (rev. 3.3): https://aisler.net/p/ELCCRXOS 1.6mm PCB GPS Edition (rev. 3.1, Developer-Release!) https://aisler.net/p/RGJUQAJC 1.6mm PCB Assembled PCBs Light Edition: https://a.aliexpress.com/_mKoyMox 1.6mm PCB LiPos 450mA round LiPo: https://a.aliexpress.com/_mrvOz8P 350mA rect. LiPo: https://www.aliexpress.com/item/4000293204820.html Fully Assembled Watches Light Edition (Rectangular LiPo, 20mm straps): https://www.makerfabs.com/open-smartwatch.html More links will be added as soon as they are available. Tech Demos Click on an image below to see some demos: Sponsors Aisler B. V. provided PCBs to support the hardware development","title":"Overview"},{"location":"index.html#overview","text":"The Open-SmartWatch is an open source project created by @pauls_3d_things / p3dt.net . It consists of hardware modules, 3D printable cases and a custom operating system to build smartwatches with the goal that they can be assembled, repaired, and modified by everyone. Make sure to check out the apps to see what the watch can do! Watchfaces Tools Games","title":"Overview"},{"location":"index.html#specifications","text":"There are currently two versions, a GPS edition (pre-released, work in progress) and a Light edition (released), which share the following hardware: ESP32-pico-D4: 2x240MHz, 320KB RAM Bluetooth 4.2 BR/EDR BLE WiFi 2.4GHz 802.11 b/g/n GC9A01 240x240 16bit TFT display (round) BMA400 Accelerometer + Pedometer MCP73831 LiPo Charger CH340E USB Serial The GPS edition has additionally: Quectel L96 GPS module 4MB RAM microSD The PCB (KiCAD), Case design files (Blender), and Operating System (C++/Arduino/PlatformIO) are all created with open source software, and are hosted on GitHub (see links below).","title":"Specifications"},{"location":"index.html#media-coverage","text":"@pauls_3d_things on Instagram (Latest Updates!) #opensmartwatch on Instagram (See what the community creates!) pauls_3d_things on Youtube (Tutorials + Instructions!) Linus Tech Tips: It's time. Hackaday: An Open Source Smart Watch you'd actually wear CNX-Software: LilyGo sells Open-Smartwatch open-source hardware ESP32 watch by \u201cPaul\u2019s 3D Things\u201d hackster.io: Something ESPecially Impressive about the Open-Smartwatch Project","title":"Media Coverage"},{"location":"index.html#join-the-discussion","text":"Discord: Pauls 3D Things","title":"Join the Discussion"},{"location":"index.html#getting-started","text":"Please watch this to get familiar with the first steps: https://www.youtube.com/watch?v=p-mDOIUr-rQ&ab_channel=pauls_3d_things The video explains how to put the watch into flash mode. Read the readme for a guide to flash the firmware from source: https://github.com/Open-Smartwatch/open-smartwatch-os/blob/master/Readme.md","title":"Getting Started"},{"location":"index.html#repositories","text":"https://github.com/Open-Smartwatch/open-smartwatch-gps (work in progress) https://github.com/Open-Smartwatch/open-smartwatch-light (v3.3) https://github.com/Open-Smartwatch/open-smartwatch-os https://github.com/Open-Smartwatch/3d-files","title":"Repositories"},{"location":"index.html#ordering","text":"This is project is entirely open source. You can either build it from scratch, or chose from one of the manufacturers below. Everything is till in the very beginning of this project, and fully assembled watches will be available soon! Follow this project on instagram.com/pauls_3d_things/ to stay up do date and get notified once new options are available!","title":"Ordering"},{"location":"index.html#pcbs","text":"Light Edition (rev. 3.3): https://aisler.net/p/ELCCRXOS 1.6mm PCB GPS Edition (rev. 3.1, Developer-Release!) https://aisler.net/p/RGJUQAJC 1.6mm PCB","title":"PCBs"},{"location":"index.html#assembled-pcbs","text":"Light Edition: https://a.aliexpress.com/_mKoyMox 1.6mm PCB","title":"Assembled PCBs"},{"location":"index.html#lipos","text":"450mA round LiPo: https://a.aliexpress.com/_mrvOz8P 350mA rect. LiPo: https://www.aliexpress.com/item/4000293204820.html","title":"LiPos"},{"location":"index.html#fully-assembled-watches","text":"Light Edition (Rectangular LiPo, 20mm straps): https://www.makerfabs.com/open-smartwatch.html More links will be added as soon as they are available.","title":"Fully Assembled Watches"},{"location":"index.html#tech-demos","text":"Click on an image below to see some demos:","title":"Tech Demos"},{"location":"index.html#sponsors","text":"Aisler B. V. provided PCBs to support the hardware development","title":"Sponsors"},{"location":"1_light-edition.html","text":"Light Edition Releases Release v3.1 Sources/Gerbers ) PCB via Aisler The following files always point to the latest versions committed to GitHub. Schematic PCB BOM See: here KiCAD Sources See: https://github.com/Open-Smartwatch/open-smartwatch-light","title":"Light Edition"},{"location":"1_light-edition.html#light-edition","text":"","title":"Light Edition"},{"location":"1_light-edition.html#releases","text":"Release v3.1 Sources/Gerbers ) PCB via Aisler The following files always point to the latest versions committed to GitHub.","title":"Releases"},{"location":"1_light-edition.html#schematic","text":"","title":"Schematic"},{"location":"1_light-edition.html#pcb","text":"","title":"PCB"},{"location":"1_light-edition.html#bom","text":"See: here","title":"BOM"},{"location":"1_light-edition.html#kicad-sources","text":"See: https://github.com/Open-Smartwatch/open-smartwatch-light","title":"KiCAD Sources"},{"location":"2_gps-edition.html","text":"GPS Edition Releases Pre-Release v3.1 (Outdated, V4.4 is work in progress) Sources/Gerbers PCB via Aisler The following files always point to the latest versions committed to GitHub. Schematic PCB BOM See: here KiCAD Sources See: https://github.com/Open-Smartwatch/open-smartwatch-gps","title":"GPS Edition"},{"location":"2_gps-edition.html#gps-edition","text":"","title":"GPS Edition"},{"location":"2_gps-edition.html#releases","text":"Pre-Release v3.1 (Outdated, V4.4 is work in progress) Sources/Gerbers PCB via Aisler The following files always point to the latest versions committed to GitHub.","title":"Releases"},{"location":"2_gps-edition.html#schematic","text":"","title":"Schematic"},{"location":"2_gps-edition.html#pcb","text":"","title":"PCB"},{"location":"2_gps-edition.html#bom","text":"See: here","title":"BOM"},{"location":"2_gps-edition.html#kicad-sources","text":"See: https://github.com/Open-Smartwatch/open-smartwatch-gps","title":"KiCAD Sources"},{"location":"3_3d-files.html","text":"3D Files The 3D case design is optimized for FDM based 3D printers. Cases The naming is case - gps/light - <pcb-thickness> - <strap-type> \u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f When assembling the watch, please make sure to insulate the flex cable, to avoid shorts when pressing down on the display (best: kapton tape on the entire back of the LCD) the current case designs don't have sufficient room to assemble/disassemble the watch more than a few times. there will be a fix for the cases soon , until then carefully carve out the case until the display fits with not walls pressing against the flex cable. See 3d-files/issues/13 . case-gps-0.8mm-pcb-20mm-straps case-light-0.8mm-pcb-20mm-straps case-light-0.8mm-pcb-printed-straps case-light-1.6mm-pcb-20mm-straps case-light-1.6mm-pcb-printed-straps case-light-round-0.8mm-pcb-printed-straps case-light-round-1.6mm-pcb-printed-straps case-light-round-20mm-wr-test Straps wrist-strap-linked wrist-strap-flex Check the repository https://github.com/Open-Smartwatch/3d-files/ in case the lists above are outdated. Print Settings FDM The cases are designed for a layer height of 0.1mm and 100% infill. All files are printable without support, given the right orientation. Some of the -top parts are face down (rotated 180 degrees), if the underside is not flat. SLA Prusa SL1 Light Edition, case 1.6mm pcb, 20mm straps with pregenerated supports: Download","title":"3D Files"},{"location":"3_3d-files.html#3d-files","text":"The 3D case design is optimized for FDM based 3D printers.","title":"3D Files"},{"location":"3_3d-files.html#cases","text":"The naming is case - gps/light - <pcb-thickness> - <strap-type> \u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f When assembling the watch, please make sure to insulate the flex cable, to avoid shorts when pressing down on the display (best: kapton tape on the entire back of the LCD) the current case designs don't have sufficient room to assemble/disassemble the watch more than a few times. there will be a fix for the cases soon , until then carefully carve out the case until the display fits with not walls pressing against the flex cable. See 3d-files/issues/13 . case-gps-0.8mm-pcb-20mm-straps case-light-0.8mm-pcb-20mm-straps case-light-0.8mm-pcb-printed-straps case-light-1.6mm-pcb-20mm-straps case-light-1.6mm-pcb-printed-straps case-light-round-0.8mm-pcb-printed-straps case-light-round-1.6mm-pcb-printed-straps case-light-round-20mm-wr-test","title":"Cases"},{"location":"3_3d-files.html#straps","text":"wrist-strap-linked wrist-strap-flex Check the repository https://github.com/Open-Smartwatch/3d-files/ in case the lists above are outdated.","title":"Straps"},{"location":"3_3d-files.html#print-settings","text":"","title":"Print Settings"},{"location":"3_3d-files.html#fdm","text":"The cases are designed for a layer height of 0.1mm and 100% infill. All files are printable without support, given the right orientation. Some of the -top parts are face down (rotated 180 degrees), if the underside is not flat.","title":"FDM"},{"location":"3_3d-files.html#sla","text":"","title":"SLA"},{"location":"3_3d-files.html#prusa-sl1","text":"Light Edition, case 1.6mm pcb, 20mm straps with pregenerated supports: Download","title":"Prusa SL1"},{"location":"4_flashing.html","text":"Upload Software Requirements Development Environment To flash the latest software to the open-smartwatch you will need to install VScode with PlatformIO (Youtube tutorial: https://youtu.be/JmvMvIphMnY ). Git Install git from https://git-scm.com . Serial Drivers CH340 The Open-Smartwatch uses a ch340 for USB to serial. Please install the drivers from the manufacturer: http://www.wch-ic.com/downloads/CH341SER_ZIP.html Cloning the Repository Clone the source code repository recursively : git clone --recurse-submodules https://github.com/Open-Smartwatch/open-smartwatch-os.git Then, open the directory with Visual Studio Code. Set up config.h Got to the directory include/ and copy the config.h.example to config.h . Inside include/config.h make sure to adapt the following defines: #define WIFI_SSID \"yourSSID\" #define WIFI_PASS \"yourP4ssw0rd\" #define TIMEZONE 1 #define DAYLIGHTOFFSET 0 #define DEVICE_NAME \"yourDeviceName\" Uploading Keep in mind the PCB is flipped when inserted into the watch: To set the watch into upload mode, you need to hold the lower left button and then click the reset button (top left). This enables flash mode, the display will turn dark. Press the reset button after uploading","title":"Upload Software"},{"location":"4_flashing.html#upload-software","text":"","title":"Upload Software"},{"location":"4_flashing.html#requirements","text":"","title":"Requirements"},{"location":"4_flashing.html#development-environment","text":"To flash the latest software to the open-smartwatch you will need to install VScode with PlatformIO (Youtube tutorial: https://youtu.be/JmvMvIphMnY ).","title":"Development Environment"},{"location":"4_flashing.html#git","text":"Install git from https://git-scm.com .","title":"Git"},{"location":"4_flashing.html#serial-drivers-ch340","text":"The Open-Smartwatch uses a ch340 for USB to serial. Please install the drivers from the manufacturer: http://www.wch-ic.com/downloads/CH341SER_ZIP.html","title":"Serial Drivers CH340"},{"location":"4_flashing.html#cloning-the-repository","text":"Clone the source code repository recursively : git clone --recurse-submodules https://github.com/Open-Smartwatch/open-smartwatch-os.git Then, open the directory with Visual Studio Code.","title":"Cloning the Repository"},{"location":"4_flashing.html#set-up-configh","text":"Got to the directory include/ and copy the config.h.example to config.h . Inside include/config.h make sure to adapt the following defines: #define WIFI_SSID \"yourSSID\" #define WIFI_PASS \"yourP4ssw0rd\" #define TIMEZONE 1 #define DAYLIGHTOFFSET 0 #define DEVICE_NAME \"yourDeviceName\"","title":"Set up config.h"},{"location":"4_flashing.html#uploading","text":"Keep in mind the PCB is flipped when inserted into the watch: To set the watch into upload mode, you need to hold the lower left button and then click the reset button (top left). This enables flash mode, the display will turn dark. Press the reset button after uploading","title":"Uploading"},{"location":"5_community_forks.html","text":"Community Forks by Electro707 (WIP) Changes with this design: Replace the battery charger and power mux combo with an integrated PowerPath TI charger IC (BQ24230RGT) Replace the module with an ESP32-PICO-MINI-02 Replace the connector with a TypeC Replace the RTC with a smaller package one (RV-8523-C3) Added a 3D compass/accelerometer/gyroscope IC Added a temperature/humidity/pressure sensor (BME280) Repositories: With lora - WIP - untested. Without lora - WIP - untested.","title":"Community Forks"},{"location":"5_community_forks.html#community-forks","text":"","title":"Community Forks"},{"location":"5_community_forks.html#by-electro707-wip","text":"Changes with this design: Replace the battery charger and power mux combo with an integrated PowerPath TI charger IC (BQ24230RGT) Replace the module with an ESP32-PICO-MINI-02 Replace the connector with a TypeC Replace the RTC with a smaller package one (RV-8523-C3) Added a 3D compass/accelerometer/gyroscope IC Added a temperature/humidity/pressure sensor (BME280) Repositories: With lora - WIP - untested. Without lora - WIP - untested.","title":"by Electro707 (WIP)"},{"location":"Apps/01_watchfaces.html","text":"Watchfaces Default Analog The default analog watchface. Steps are shown in the blue circle, a full rotation is 10800 steps. Source: watchface.cpp Author: pauls-3d-things Digital The default digital watchface. Steps are shown as a number at the bottom of the screen. Source: watchface_digital.cpp Author: rawsignal Binary The default binary watchface. Steps are shown as a hexadecimal number at side of the screen. Source: watchface_binary.cpp Author: xasz More Want to add your watch face to this project? Fork this repository: https://github.com/Open-Smartwatch/open-smartwatch.github.io/tree/source and create a pull request. Join the discord server if you have questions: https://discord.gg/9DK5JY6 .","title":"Watchfaces"},{"location":"Apps/01_watchfaces.html#watchfaces","text":"","title":"Watchfaces"},{"location":"Apps/01_watchfaces.html#default","text":"","title":"Default"},{"location":"Apps/01_watchfaces.html#analog","text":"The default analog watchface. Steps are shown in the blue circle, a full rotation is 10800 steps. Source: watchface.cpp Author: pauls-3d-things","title":"Analog"},{"location":"Apps/01_watchfaces.html#digital","text":"The default digital watchface. Steps are shown as a number at the bottom of the screen. Source: watchface_digital.cpp Author: rawsignal","title":"Digital"},{"location":"Apps/01_watchfaces.html#binary","text":"The default binary watchface. Steps are shown as a hexadecimal number at side of the screen. Source: watchface_binary.cpp Author: xasz","title":"Binary"},{"location":"Apps/01_watchfaces.html#more","text":"Want to add your watch face to this project? Fork this repository: https://github.com/Open-Smartwatch/open-smartwatch.github.io/tree/source and create a pull request. Join the discord server if you have questions: https://discord.gg/9DK5JY6 .","title":"More"},{"location":"Apps/02_tools.html","text":"Tools Config App The configuration app. Once connected to the WiFi it starts a webserver that allows you to access and modify your watch's configuration as well as upload new firmware images. Open the webpage http://192.168.1.119/ (the IP will change according to your local WiFi network), in your browser. Use the username admin as well as the password shown on the watch screen to authenticate. Source: config_mgmt.cpp Authors: Simonmicro , pauls-3d-things Manual Time Setting If you have no WiFi connection, you can manually set the time and date with the manual configuration app. Source: time_config.cpp Authors: richtepa Stop Watch A stopwatch to count seconds. Source: stopwatch.cpp Authors: pauls-3d-things Water Level A water level, to test the acceleration sensor. Source: water_level.cpp Authors: pauls-3d-things The second screen, axis view. Source: water_level.cpp Authors: GPaddle More Want to add your tool to this project? Fork this repository: https://github.com/Open-Smartwatch/open-smartwatch.github.io/tree/source and create a pull request. Join the discord server if you have questions: https://discord.gg/9DK5JY6 .","title":"Tools"},{"location":"Apps/02_tools.html#tools","text":"","title":"Tools"},{"location":"Apps/02_tools.html#config-app","text":"The configuration app. Once connected to the WiFi it starts a webserver that allows you to access and modify your watch's configuration as well as upload new firmware images. Open the webpage http://192.168.1.119/ (the IP will change according to your local WiFi network), in your browser. Use the username admin as well as the password shown on the watch screen to authenticate. Source: config_mgmt.cpp Authors: Simonmicro , pauls-3d-things","title":"Config App"},{"location":"Apps/02_tools.html#manual-time-setting","text":"If you have no WiFi connection, you can manually set the time and date with the manual configuration app. Source: time_config.cpp Authors: richtepa","title":"Manual Time Setting"},{"location":"Apps/02_tools.html#stop-watch","text":"A stopwatch to count seconds. Source: stopwatch.cpp Authors: pauls-3d-things","title":"Stop Watch"},{"location":"Apps/02_tools.html#water-level","text":"A water level, to test the acceleration sensor. Source: water_level.cpp Authors: pauls-3d-things The second screen, axis view. Source: water_level.cpp Authors: GPaddle","title":"Water Level"},{"location":"Apps/02_tools.html#more","text":"Want to add your tool to this project? Fork this repository: https://github.com/Open-Smartwatch/open-smartwatch.github.io/tree/source and create a pull request. Join the discord server if you have questions: https://discord.gg/9DK5JY6 .","title":"More"},{"location":"Apps/03_games.html","text":"Games Snake An awesome snake game on the open smartwatch! Source: snake_game.cpp Authors: GPaddle More Want to add your game to this project? Fork this repository: https://github.com/Open-Smartwatch/open-smartwatch.github.io/tree/source and create a pull request. Join the discord server if you have questions: https://discord.gg/9DK5JY6 .","title":"Games"},{"location":"Apps/03_games.html#games","text":"","title":"Games"},{"location":"Apps/03_games.html#snake","text":"An awesome snake game on the open smartwatch! Source: snake_game.cpp Authors: GPaddle","title":"Snake"},{"location":"Apps/03_games.html#more","text":"Want to add your game to this project? Fork this repository: https://github.com/Open-Smartwatch/open-smartwatch.github.io/tree/source and create a pull request. Join the discord server if you have questions: https://discord.gg/9DK5JY6 .","title":"More"},{"location":"Build%20your%20Own/1_assembly.html","text":"Assembly If you want to assemble an Open-Smartwatch on your own, you'll need a hot air gun or a reflow station. If you don't need the acceleromter, you can hand solder everything with a little bit of practice. See the respective watches for links to BOM/PCB and source files. The list of components from AliExpress is only to give an orientation.","title":"Assembly"},{"location":"Build%20your%20Own/1_assembly.html#assembly","text":"If you want to assemble an Open-Smartwatch on your own, you'll need a hot air gun or a reflow station. If you don't need the acceleromter, you can hand solder everything with a little bit of practice. See the respective watches for links to BOM/PCB and source files. The list of components from AliExpress is only to give an orientation.","title":"Assembly"},{"location":"Build%20your%20Own/2_aliexpress.html","text":"Parts via Aliexpress The links are only examples. Check the related products for better prices or shipping conditions. Part Description Aliexpress Link U7 TTGO T-MICRO32 https://www.aliexpress.com/item/32869180373.html U4 GC9A01 https://www.aliexpress.com/item/1005001382307998.html U8 Quectel L96-M33 https://www.aliexpress.com/item/32920337260.html D1 LED 0805 https://www.aliexpress.com/item/32947001269.html U2 BMA400 https://www.aliexpress.com/item/4001043933700.html U6 CH340E https://www.aliexpress.com/item/4000171821951.html U1 DS3231MZ https://www.aliexpress.com/item/32962505279.html U3 PSRAM https://www.aliexpress.com/item/4000242457828.html U10,U13 XC6209F332MR-G https://www.aliexpress.com/item/4000687517883.html U11 MCP73831T-2ACI/OT SOT23-5 https://www.aliexpress.com/item/32714249253.html U9 TPS2115APWR https://www.aliexpress.com/item/32612393464.html U5 USB-Micro https://www.aliexpress.com/item/32820570603.html SW1, SW2, SW4, SW5 Buttons https://www.aliexpress.com/item/32870278366.html XS1 uSD Slot https://www.aliexpress.com/item/1005001470093106.html Q1 2N7002 https://www.aliexpress.com/item/32912312094.html R1-RN 0603 SMD R https://www.aliexpress.com/item/32298348854.html C5,C6 1206 SMD C https://www.aliexpress.com/item/32956133014.html C1-CN 0603 SMD C https://www.aliexpress.com/item/32841971485.html R5 blob of solder N/A ? Round Lipo https://a.aliexpress.com/_mrvOz8P","title":"Parts via Aliexpress"},{"location":"Build%20your%20Own/2_aliexpress.html#parts-via-aliexpress","text":"The links are only examples. Check the related products for better prices or shipping conditions. Part Description Aliexpress Link U7 TTGO T-MICRO32 https://www.aliexpress.com/item/32869180373.html U4 GC9A01 https://www.aliexpress.com/item/1005001382307998.html U8 Quectel L96-M33 https://www.aliexpress.com/item/32920337260.html D1 LED 0805 https://www.aliexpress.com/item/32947001269.html U2 BMA400 https://www.aliexpress.com/item/4001043933700.html U6 CH340E https://www.aliexpress.com/item/4000171821951.html U1 DS3231MZ https://www.aliexpress.com/item/32962505279.html U3 PSRAM https://www.aliexpress.com/item/4000242457828.html U10,U13 XC6209F332MR-G https://www.aliexpress.com/item/4000687517883.html U11 MCP73831T-2ACI/OT SOT23-5 https://www.aliexpress.com/item/32714249253.html U9 TPS2115APWR https://www.aliexpress.com/item/32612393464.html U5 USB-Micro https://www.aliexpress.com/item/32820570603.html SW1, SW2, SW4, SW5 Buttons https://www.aliexpress.com/item/32870278366.html XS1 uSD Slot https://www.aliexpress.com/item/1005001470093106.html Q1 2N7002 https://www.aliexpress.com/item/32912312094.html R1-RN 0603 SMD R https://www.aliexpress.com/item/32298348854.html C5,C6 1206 SMD C https://www.aliexpress.com/item/32956133014.html C1-CN 0603 SMD C https://www.aliexpress.com/item/32841971485.html R5 blob of solder N/A ? Round Lipo https://a.aliexpress.com/_mrvOz8P","title":"Parts via Aliexpress"},{"location":"Build%20your%20Own/3_tools.html","text":"Tools The software used to create this project is also open source! Software The PCBs are designed with KiCAD: https://kicad.org The 3D Design files are made with Blender: https://www.blender.org Hardware This is an incomplete list of tools you might need to build an Open-Smartwatch on your own. Material Aliexpress Link Solder Paste https://www.aliexpress.com/item/33057598049.html Desoldering Wire https://www.aliexpress.com/item/32958719300.html Flux https://www.aliexpress.com/item/4000480154850.html Soldering Iron https://www.aliexpress.com/item/32860309312.html Hot Plate https://www.aliexpress.com/item/32974173898.html","title":"Tools"},{"location":"Build%20your%20Own/3_tools.html#tools","text":"The software used to create this project is also open source!","title":"Tools"},{"location":"Build%20your%20Own/3_tools.html#software","text":"The PCBs are designed with KiCAD: https://kicad.org The 3D Design files are made with Blender: https://www.blender.org","title":"Software"},{"location":"Build%20your%20Own/3_tools.html#hardware","text":"This is an incomplete list of tools you might need to build an Open-Smartwatch on your own. Material Aliexpress Link Solder Paste https://www.aliexpress.com/item/33057598049.html Desoldering Wire https://www.aliexpress.com/item/32958719300.html Flux https://www.aliexpress.com/item/4000480154850.html Soldering Iron https://www.aliexpress.com/item/32860309312.html Hot Plate https://www.aliexpress.com/item/32974173898.html","title":"Hardware"}]}